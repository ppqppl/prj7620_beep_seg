|prj7620_beep_seg
clk => clk.IN10
rst_n => rst_n.IN9
key[0] => key[0].IN1
key[1] => key[1].IN1
key[2] => key[2].IN1
key[3] => ~NO_FANOUT~
scl <= paj7620_top:paj7620_top_inst.scl
led[0] <= beep_led_drive:inst_led_beep.led
led[1] <= beep_led_drive:inst_led_beep.led
led[2] <= beep_led_drive:inst_led_beep.led
led[3] <= beep_led_drive:inst_led_beep.led
dig[0] <= seg_drive:inst_seg_drive.seg
dig[1] <= seg_drive:inst_seg_drive.seg
dig[2] <= seg_drive:inst_seg_drive.seg
dig[3] <= seg_drive:inst_seg_drive.seg
dig[4] <= seg_drive:inst_seg_drive.seg
dig[5] <= seg_drive:inst_seg_drive.seg
dig[6] <= seg_drive:inst_seg_drive.seg
dig[7] <= seg_drive:inst_seg_drive.seg
sel[0] <= sel[0].DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel[1].DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel[2].DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= sel[3].DB_MAX_OUTPUT_PORT_TYPE
sel[4] <= sel[4].DB_MAX_OUTPUT_PORT_TYPE
sel[5] <= sel[5].DB_MAX_OUTPUT_PORT_TYPE
beep <= beep_drive:inst_beep_drive.beep
sda <> paj7620_top:paj7620_top_inst.sda


|prj7620_beep_seg|paj7620_top:paj7620_top_inst
sys_clk => sys_clk.IN1
sys_rst_n => sys_rst_n.IN2
scl <= i2c_ctrl:i2c_ctrl_inst.scl
data[0] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[1] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[2] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[3] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[4] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[5] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[6] <= i2c_ctrl:i2c_ctrl_inst.po_data
data[7] <= i2c_ctrl:i2c_ctrl_inst.po_data
sda <> i2c_ctrl:i2c_ctrl_inst.sda


|prj7620_beep_seg|paj7620_top:paj7620_top_inst|i2c_ctrl:i2c_ctrl_inst
sys_clk => i2c_clk~reg0.CLK
sys_clk => cnt_clk[0].CLK
sys_clk => cnt_clk[1].CLK
sys_clk => cnt_clk[2].CLK
sys_clk => cnt_clk[3].CLK
sys_clk => cnt_clk[4].CLK
sys_rst_n => cfg_num[0].ACLR
sys_rst_n => cfg_num[1].ACLR
sys_rst_n => cfg_num[2].ACLR
sys_rst_n => cfg_num[3].ACLR
sys_rst_n => cfg_num[4].ACLR
sys_rst_n => cfg_num[5].ACLR
sys_rst_n => error_en.ACLR
sys_rst_n => cnt_delay[0].ACLR
sys_rst_n => cnt_delay[1].ACLR
sys_rst_n => cnt_delay[2].ACLR
sys_rst_n => cnt_delay[3].ACLR
sys_rst_n => cnt_delay[4].ACLR
sys_rst_n => cnt_delay[5].ACLR
sys_rst_n => cnt_delay[6].ACLR
sys_rst_n => cnt_delay[7].ACLR
sys_rst_n => cnt_delay[8].ACLR
sys_rst_n => cnt_delay[9].ACLR
sys_rst_n => mode[0]~reg0.ACLR
sys_rst_n => mode[1]~reg0.ACLR
sys_rst_n => mode[2]~reg0.ACLR
sys_rst_n => i2c_end.ACLR
sys_rst_n => cnt_bit[0].ACLR
sys_rst_n => cnt_bit[1].ACLR
sys_rst_n => cnt_bit[2].ACLR
sys_rst_n => cnt_i2c_clk[0].ACLR
sys_rst_n => cnt_i2c_clk[1].ACLR
sys_rst_n => skip_en_7.ACLR
sys_rst_n => skip_en_6.ACLR
sys_rst_n => skip_en_5.ACLR
sys_rst_n => skip_en_4.ACLR
sys_rst_n => skip_en_3.ACLR
sys_rst_n => skip_en_2.ACLR
sys_rst_n => skip_en_1.ACLR
sys_rst_n => cnt_wait[0].ACLR
sys_rst_n => cnt_wait[1].ACLR
sys_rst_n => cnt_wait[2].ACLR
sys_rst_n => cnt_wait[3].ACLR
sys_rst_n => cnt_wait[4].ACLR
sys_rst_n => cnt_wait[5].ACLR
sys_rst_n => cnt_wait[6].ACLR
sys_rst_n => cnt_wait[7].ACLR
sys_rst_n => cnt_wait[8].ACLR
sys_rst_n => cnt_wait[9].ACLR
sys_rst_n => cfg_start~reg0.ACLR
sys_rst_n => i2c_clk~reg0.ACLR
sys_rst_n => po_data[7]$latch.ACLR
sys_rst_n => po_data[6]$latch.ACLR
sys_rst_n => po_data[5]$latch.ACLR
sys_rst_n => po_data[4]$latch.ACLR
sys_rst_n => po_data[3]$latch.ACLR
sys_rst_n => po_data[2]$latch.ACLR
sys_rst_n => po_data[1]$latch.ACLR
sys_rst_n => po_data[0]$latch.ACLR
sys_rst_n => cnt_clk[0].ACLR
sys_rst_n => cnt_clk[1].ACLR
sys_rst_n => cnt_clk[2].ACLR
sys_rst_n => cnt_clk[3].ACLR
sys_rst_n => cnt_clk[4].ACLR
sys_rst_n => rec_data[0].ACLR
sys_rst_n => rec_data[1].ACLR
sys_rst_n => rec_data[2].ACLR
sys_rst_n => rec_data[3].ACLR
sys_rst_n => rec_data[4].ACLR
sys_rst_n => rec_data[5].ACLR
sys_rst_n => rec_data[6].ACLR
sys_rst_n => rec_data[7].ACLR
sys_rst_n => po_data_reg[0].ACLR
sys_rst_n => po_data_reg[1].ACLR
sys_rst_n => po_data_reg[2].ACLR
sys_rst_n => po_data_reg[3].ACLR
sys_rst_n => po_data_reg[4].ACLR
sys_rst_n => po_data_reg[5].ACLR
sys_rst_n => po_data_reg[6].ACLR
sys_rst_n => po_data_reg[7].ACLR
sys_rst_n => c_state~3.DATAIN
cfg_data[0] => Mux4.IN7
cfg_data[1] => Mux18.IN7
cfg_data[2] => Mux17.IN7
cfg_data[3] => Mux16.IN7
cfg_data[4] => Mux15.IN7
cfg_data[5] => Mux14.IN7
cfg_data[6] => Mux13.IN7
cfg_data[7] => Mux12.IN7
cfg_data[8] => Mux10.IN7
cfg_data[9] => Mux9.IN7
cfg_data[10] => Mux8.IN7
cfg_data[11] => Mux7.IN7
cfg_data[12] => Mux6.IN7
cfg_data[13] => Mux5.IN7
cfg_data[14] => Mux3.IN7
cfg_data[15] => Mux1.IN7
cfg_data[16] => Mux0.IN7
cfg_data[17] => Mux23.IN7
cfg_data[18] => Mux24.IN7
cfg_data[19] => Mux25.IN7
cfg_data[20] => Mux26.IN7
cfg_data[21] => Mux27.IN7
cfg_data[22] => Mux28.IN7
cfg_data[23] => Mux29.IN7
i2c_start => always6.IN1
reg_num[0] => Equal13.IN3
reg_num[1] => Equal13.IN2
reg_num[2] => Equal13.IN5
reg_num[3] => Equal13.IN4
reg_num[4] => Equal13.IN1
reg_num[5] => Equal13.IN0
scl <= scl.DB_MAX_OUTPUT_PORT_TYPE
cfg_start <= cfg_start~reg0.DB_MAX_OUTPUT_PORT_TYPE
i2c_clk <= i2c_clk~reg0.DB_MAX_OUTPUT_PORT_TYPE
mode[0] <= mode[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mode[1] <= mode[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
mode[2] <= mode[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
po_data[0] <= po_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[1] <= po_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[2] <= po_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[3] <= po_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[4] <= po_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[5] <= po_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[6] <= po_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
po_data[7] <= po_data[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda


|prj7620_beep_seg|paj7620_top:paj7620_top_inst|prj7620_cfg:prj7620_cfg_inst
i2c_clk => i2c_start~reg0.CLK
i2c_clk => reg_num[0]~reg0.CLK
i2c_clk => reg_num[1]~reg0.CLK
i2c_clk => reg_num[2]~reg0.CLK
i2c_clk => reg_num[3]~reg0.CLK
i2c_clk => reg_num[4]~reg0.CLK
i2c_clk => reg_num[5]~reg0.CLK
sys_rst_n => reg_num[0]~reg0.ACLR
sys_rst_n => reg_num[1]~reg0.ACLR
sys_rst_n => reg_num[2]~reg0.ACLR
sys_rst_n => reg_num[3]~reg0.ACLR
sys_rst_n => reg_num[4]~reg0.ACLR
sys_rst_n => reg_num[5]~reg0.ACLR
sys_rst_n => i2c_start~reg0.ACLR
cfg_start => always1.IN1
mode[0] => Equal0.IN2
mode[1] => Equal0.IN1
mode[2] => Equal0.IN0
cfg_data[0] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[1] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[2] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[3] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[4] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[5] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[6] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[7] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[8] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[9] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[10] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[11] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[12] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[13] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[14] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[15] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[16] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[17] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[18] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[19] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[20] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[21] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[22] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
cfg_data[23] <= cfg_data.DB_MAX_OUTPUT_PORT_TYPE
i2c_start <= i2c_start~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[0] <= reg_num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[1] <= reg_num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[2] <= reg_num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[3] <= reg_num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[4] <= reg_num[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_num[5] <= reg_num[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|sel_drive:inst_sel_drive
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
clk => flag.CLK
clk => current_state~6.DATAIN
rst_n => cnt[0].ACLR
rst_n => cnt[1].ACLR
rst_n => cnt[2].ACLR
rst_n => cnt[3].ACLR
rst_n => cnt[4].ACLR
rst_n => cnt[5].ACLR
rst_n => cnt[6].ACLR
rst_n => cnt[7].ACLR
rst_n => cnt[8].ACLR
rst_n => cnt[9].ACLR
rst_n => cnt[10].ACLR
rst_n => cnt[11].ACLR
rst_n => cnt[12].ACLR
rst_n => cnt[13].ACLR
rst_n => cnt[14].ACLR
rst_n => cnt[15].ACLR
rst_n => cnt[16].ACLR
rst_n => cnt[17].ACLR
rst_n => cnt[18].ACLR
rst_n => cnt[19].ACLR
rst_n => cnt[20].ACLR
rst_n => flag.ACLR
rst_n => next_state.state0_210.PRESET
rst_n => next_state.state1_206.ACLR
rst_n => next_state.state2_202.ACLR
rst_n => next_state.state3_198.ACLR
rst_n => next_state.state4_194.ACLR
rst_n => next_state.state5_190.ACLR
rst_n => current_state~8.DATAIN
price_put[0] => LessThan3.IN14
price_put[0] => LessThan4.IN14
price_put[1] => LessThan3.IN13
price_put[1] => LessThan4.IN13
price_put[2] => LessThan3.IN12
price_put[2] => LessThan4.IN12
price_put[3] => LessThan3.IN11
price_put[3] => LessThan4.IN11
price_put[4] => LessThan3.IN10
price_put[4] => LessThan4.IN10
price_put[5] => LessThan3.IN9
price_put[5] => LessThan4.IN9
price_put[6] => LessThan3.IN8
price_put[6] => LessThan4.IN8
price_need[0] => LessThan1.IN14
price_need[0] => LessThan2.IN14
price_need[1] => LessThan1.IN13
price_need[1] => LessThan2.IN13
price_need[2] => LessThan1.IN12
price_need[2] => LessThan2.IN12
price_need[3] => LessThan1.IN11
price_need[3] => LessThan2.IN11
price_need[4] => LessThan1.IN10
price_need[4] => LessThan2.IN10
price_need[5] => LessThan1.IN9
price_need[5] => LessThan2.IN9
price_need[6] => LessThan1.IN8
price_need[6] => LessThan2.IN8
price_out[0] => LessThan0.IN14
price_out[1] => LessThan0.IN13
price_out[2] => LessThan0.IN12
price_out[3] => LessThan0.IN11
price_out[4] => LessThan0.IN10
price_out[5] => LessThan0.IN9
price_out[6] => LessThan0.IN8
sel[0] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[1] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[2] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[3] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[4] <= sel.DB_MAX_OUTPUT_PORT_TYPE
sel[5] <= sel[5].DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|seg_drive:inst_seg_drive
clk => ~NO_FANOUT~
rst_n => ~NO_FANOUT~
sel[0] => Decoder0.IN5
sel[1] => Decoder0.IN4
sel[1] => always1.IN0
sel[2] => Decoder0.IN3
sel[3] => Decoder0.IN2
sel[3] => always1.IN1
sel[4] => Decoder0.IN1
sel[5] => Decoder0.IN0
sel[5] => always1.IN1
price_put[0] => Mod0.IN13
price_put[0] => Mod1.IN10
price_put[1] => Mod0.IN12
price_put[1] => Mod1.IN9
price_put[2] => Mod0.IN11
price_put[2] => Mod1.IN8
price_put[3] => Mod0.IN10
price_put[3] => Mod1.IN7
price_put[4] => Mod0.IN9
price_put[4] => Mod1.IN6
price_put[5] => Mod0.IN8
price_put[5] => Mod1.IN5
price_put[6] => Mod0.IN7
price_put[6] => Mod1.IN4
price_need[0] => Mod2.IN13
price_need[0] => Mod3.IN10
price_need[1] => Mod2.IN12
price_need[1] => Mod3.IN9
price_need[2] => Mod2.IN11
price_need[2] => Mod3.IN8
price_need[3] => Mod2.IN10
price_need[3] => Mod3.IN7
price_need[4] => Mod2.IN9
price_need[4] => Mod3.IN6
price_need[5] => Mod2.IN8
price_need[5] => Mod3.IN5
price_need[6] => Mod2.IN7
price_need[6] => Mod3.IN4
price_out[0] => Mod4.IN13
price_out[0] => Mod5.IN10
price_out[1] => Mod4.IN12
price_out[1] => Mod5.IN9
price_out[2] => Mod4.IN11
price_out[2] => Mod5.IN8
price_out[3] => Mod4.IN10
price_out[3] => Mod5.IN7
price_out[4] => Mod4.IN9
price_out[4] => Mod5.IN6
price_out[5] => Mod4.IN8
price_out[5] => Mod5.IN5
price_out[6] => Mod4.IN7
price_out[6] => Mod5.IN4
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seg[6] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seg[7] <= always1.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|buy:inst_buy
clk => led_value[0]~reg0.CLK
clk => led_value[1]~reg0.CLK
clk => led_value[2]~reg0.CLK
clk => led_value[3]~reg0.CLK
clk => price_out[0]~reg0.CLK
clk => price_out[1]~reg0.CLK
clk => price_out[2]~reg0.CLK
clk => price_out[3]~reg0.CLK
clk => price_out[4]~reg0.CLK
clk => price_out[5]~reg0.CLK
clk => price_out[6]~reg0.CLK
clk => price_need[0]~reg0.CLK
clk => price_need[1]~reg0.CLK
clk => price_need[2]~reg0.CLK
clk => price_need[3]~reg0.CLK
clk => price_need[4]~reg0.CLK
clk => price_need[5]~reg0.CLK
clk => price_need[6]~reg0.CLK
clk => price_tmp[0].CLK
clk => price_tmp[1].CLK
clk => price_put[0]~reg0.CLK
clk => price_put[1]~reg0.CLK
clk => price_put[2]~reg0.CLK
clk => price_put[3]~reg0.CLK
clk => price_put[4]~reg0.CLK
clk => price_put[5]~reg0.CLK
clk => price_put[6]~reg0.CLK
clk => price_put_last[0].CLK
clk => price_put_last[1].CLK
clk => price_put_last[2].CLK
clk => price_put_last[3].CLK
clk => price_put_last[4].CLK
clk => price_put_last[5].CLK
clk => price_put_last[6].CLK
clk => flag_is_retreat_end.CLK
clk => flag_can_operation.CLK
clk => cnt_time[0].CLK
clk => cnt_time[1].CLK
clk => cnt_time[2].CLK
clk => cnt_time[3].CLK
clk => cnt_time[4].CLK
clk => cnt_time[5].CLK
clk => cnt_time[6].CLK
clk => cnt_time[7].CLK
clk => cnt_time[8].CLK
clk => cnt_time[9].CLK
clk => cnt_time[10].CLK
clk => cnt_time[11].CLK
clk => cnt_time[12].CLK
clk => cnt_time[13].CLK
clk => cnt_time[14].CLK
clk => cnt_time[15].CLK
clk => cnt_time[16].CLK
clk => cnt_time[17].CLK
clk => cnt_time[18].CLK
clk => cnt_time[19].CLK
clk => cnt_time[20].CLK
clk => cnt_time[21].CLK
clk => cnt_time[22].CLK
clk => cnt_time[23].CLK
clk => cnt_time[24].CLK
clk => cnt_time[25].CLK
clk => cnt_time[26].CLK
clk => cnt_time[27].CLK
rstn => flag_is_retreat_end.ACLR
rstn => flag_can_operation.PRESET
rstn => cnt_time[0].ACLR
rstn => cnt_time[1].ACLR
rstn => cnt_time[2].ACLR
rstn => cnt_time[3].ACLR
rstn => cnt_time[4].ACLR
rstn => cnt_time[5].ACLR
rstn => cnt_time[6].ACLR
rstn => cnt_time[7].ACLR
rstn => cnt_time[8].ACLR
rstn => cnt_time[9].ACLR
rstn => cnt_time[10].ACLR
rstn => cnt_time[11].ACLR
rstn => cnt_time[12].ACLR
rstn => cnt_time[13].ACLR
rstn => cnt_time[14].ACLR
rstn => cnt_time[15].ACLR
rstn => cnt_time[16].ACLR
rstn => cnt_time[17].ACLR
rstn => cnt_time[18].ACLR
rstn => cnt_time[19].ACLR
rstn => cnt_time[20].ACLR
rstn => cnt_time[21].ACLR
rstn => cnt_time[22].ACLR
rstn => cnt_time[23].ACLR
rstn => cnt_time[24].ACLR
rstn => cnt_time[25].ACLR
rstn => cnt_time[26].ACLR
rstn => cnt_time[27].ACLR
rstn => price_put[0]~reg0.ACLR
rstn => price_put[1]~reg0.ACLR
rstn => price_put[2]~reg0.ACLR
rstn => price_put[3]~reg0.ACLR
rstn => price_put[4]~reg0.ACLR
rstn => price_put[5]~reg0.ACLR
rstn => price_put[6]~reg0.ACLR
rstn => led_value[0]~reg0.PRESET
rstn => led_value[1]~reg0.ACLR
rstn => led_value[2]~reg0.ACLR
rstn => led_value[3]~reg0.ACLR
rstn => price_need[0]~reg0.PRESET
rstn => price_need[1]~reg0.ACLR
rstn => price_need[2]~reg0.PRESET
rstn => price_need[3]~reg0.ACLR
rstn => price_need[4]~reg0.ACLR
rstn => price_need[5]~reg0.ACLR
rstn => price_need[6]~reg0.ACLR
rstn => price_out[0]~reg0.ACLR
rstn => price_out[1]~reg0.ACLR
rstn => price_out[2]~reg0.ACLR
rstn => price_out[3]~reg0.ACLR
rstn => price_out[4]~reg0.ACLR
rstn => price_out[5]~reg0.ACLR
rstn => price_out[6]~reg0.ACLR
rstn => price_put_last[0].ACLR
rstn => price_put_last[1].ACLR
rstn => price_put_last[2].ACLR
rstn => price_put_last[3].ACLR
rstn => price_put_last[4].ACLR
rstn => price_put_last[5].ACLR
rstn => price_put_last[6].ACLR
rstn => price_tmp[0].ACLR
rstn => price_tmp[1].ACLR
flag[0] => always1.IN0
flag[1] => always1.IN0
flag[2] => flag_is_retreat.IN0
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
flag[3] => price_put_last.OUTPUTSELECT
key[0] => flag_is_retreat.IN1
key[1] => always1.IN1
key[2] => always1.IN1
flag_buy <= LessThan2.DB_MAX_OUTPUT_PORT_TYPE
flag_beep[0] <= <GND>
flag_beep[1] <= <GND>
flag_beep[2] <= <GND>
led_value[0] <= led_value[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_value[1] <= led_value[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_value[2] <= led_value[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
led_value[3] <= led_value[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[0] <= price_put[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[1] <= price_put[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[2] <= price_put[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[3] <= price_put[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[4] <= price_put[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[5] <= price_put[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_put[6] <= price_put[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[0] <= price_need[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[1] <= price_need[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[2] <= price_need[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[3] <= price_need[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[4] <= price_need[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[5] <= price_need[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_need[6] <= price_need[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[0] <= price_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[1] <= price_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[2] <= price_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[3] <= price_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[4] <= price_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[5] <= price_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
price_out[6] <= price_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|beep_led_drive:inst_led_beep
clk => led_flash[0].CLK
clk => led_flash[1].CLK
clk => led_flash[2].CLK
clk => led_flash[3].CLK
clk => led_running[0].CLK
clk => led_running[1].CLK
clk => led_running[2].CLK
clk => led_running[3].CLK
clk => led_running[4].CLK
clk => led_running[5].CLK
clk => led_running[6].CLK
clk => led_running[7].CLK
clk => cnt_time_flash[0].CLK
clk => cnt_time_flash[1].CLK
clk => cnt_time_flash[2].CLK
clk => cnt_time_flash[3].CLK
clk => cnt_time_flash[4].CLK
clk => cnt_time_flash[5].CLK
clk => cnt_time_flash[6].CLK
clk => cnt_time_flash[7].CLK
clk => cnt_time_flash[8].CLK
clk => cnt_time_flash[9].CLK
clk => cnt_time_flash[10].CLK
clk => cnt_time_flash[11].CLK
clk => cnt_time_flash[12].CLK
clk => cnt_time_flash[13].CLK
clk => cnt_time_flash[14].CLK
clk => cnt_time_flash[15].CLK
clk => cnt_time_flash[16].CLK
clk => cnt_time_flash[17].CLK
clk => cnt_time_flash[18].CLK
clk => cnt_time_flash[19].CLK
clk => cnt_time_flash[20].CLK
clk => cnt_time_flash[21].CLK
clk => cnt_time_flash[22].CLK
clk => cnt_time_flash[23].CLK
clk => cnt_time_flash[24].CLK
clk => cnt_time_flash[25].CLK
clk => cnt_time_flash[26].CLK
clk => cnt_time_flash[27].CLK
clk => cnt_time_running[0].CLK
clk => cnt_time_running[1].CLK
clk => cnt_time_running[2].CLK
clk => cnt_time_running[3].CLK
clk => cnt_time_running[4].CLK
clk => cnt_time_running[5].CLK
clk => cnt_time_running[6].CLK
clk => cnt_time_running[7].CLK
clk => cnt_time_running[8].CLK
clk => cnt_time_running[9].CLK
clk => cnt_time_running[10].CLK
clk => cnt_time_running[11].CLK
clk => cnt_time_running[12].CLK
clk => cnt_time_running[13].CLK
clk => cnt_time_running[14].CLK
clk => cnt_time_running[15].CLK
clk => cnt_time_running[16].CLK
clk => cnt_time_running[17].CLK
clk => cnt_time_running[18].CLK
clk => cnt_time_running[19].CLK
clk => cnt_time_running[20].CLK
clk => cnt_time_running[21].CLK
clk => cnt_time_running[22].CLK
clk => cnt_time_running[23].CLK
clk => cnt_time_running[24].CLK
clk => cnt_time_running[25].CLK
clk => cnt_time_running[26].CLK
clk => cnt_time_running[27].CLK
rst_n => cnt_time_running[0].PRESET
rst_n => cnt_time_running[1].ACLR
rst_n => cnt_time_running[2].ACLR
rst_n => cnt_time_running[3].ACLR
rst_n => cnt_time_running[4].ACLR
rst_n => cnt_time_running[5].ACLR
rst_n => cnt_time_running[6].ACLR
rst_n => cnt_time_running[7].ACLR
rst_n => cnt_time_running[8].ACLR
rst_n => cnt_time_running[9].ACLR
rst_n => cnt_time_running[10].ACLR
rst_n => cnt_time_running[11].ACLR
rst_n => cnt_time_running[12].ACLR
rst_n => cnt_time_running[13].ACLR
rst_n => cnt_time_running[14].ACLR
rst_n => cnt_time_running[15].ACLR
rst_n => cnt_time_running[16].ACLR
rst_n => cnt_time_running[17].ACLR
rst_n => cnt_time_running[18].ACLR
rst_n => cnt_time_running[19].ACLR
rst_n => cnt_time_running[20].ACLR
rst_n => cnt_time_running[21].ACLR
rst_n => cnt_time_running[22].ACLR
rst_n => cnt_time_running[23].ACLR
rst_n => cnt_time_running[24].ACLR
rst_n => cnt_time_running[25].ACLR
rst_n => cnt_time_running[26].ACLR
rst_n => cnt_time_running[27].ACLR
rst_n => cnt_time_flash[0].PRESET
rst_n => cnt_time_flash[1].ACLR
rst_n => cnt_time_flash[2].ACLR
rst_n => cnt_time_flash[3].ACLR
rst_n => cnt_time_flash[4].ACLR
rst_n => cnt_time_flash[5].ACLR
rst_n => cnt_time_flash[6].ACLR
rst_n => cnt_time_flash[7].ACLR
rst_n => cnt_time_flash[8].ACLR
rst_n => cnt_time_flash[9].ACLR
rst_n => cnt_time_flash[10].ACLR
rst_n => cnt_time_flash[11].ACLR
rst_n => cnt_time_flash[12].ACLR
rst_n => cnt_time_flash[13].ACLR
rst_n => cnt_time_flash[14].ACLR
rst_n => cnt_time_flash[15].ACLR
rst_n => cnt_time_flash[16].ACLR
rst_n => cnt_time_flash[17].ACLR
rst_n => cnt_time_flash[18].ACLR
rst_n => cnt_time_flash[19].ACLR
rst_n => cnt_time_flash[20].ACLR
rst_n => cnt_time_flash[21].ACLR
rst_n => cnt_time_flash[22].ACLR
rst_n => cnt_time_flash[23].ACLR
rst_n => cnt_time_flash[24].ACLR
rst_n => cnt_time_flash[25].ACLR
rst_n => cnt_time_flash[26].ACLR
rst_n => cnt_time_flash[27].ACLR
rst_n => led_running[0].PRESET
rst_n => led_running[1].PRESET
rst_n => led_running[2].PRESET
rst_n => led_running[3].PRESET
rst_n => led_running[4].ACLR
rst_n => led_running[5].ACLR
rst_n => led_running[6].ACLR
rst_n => led_running[7].ACLR
rst_n => led_flash[0].ACLR
rst_n => led_flash[1].ACLR
rst_n => led_flash[2].ACLR
rst_n => led_flash[3].ACLR
value[0] => Mux0.IN17
value[0] => Mux1.IN17
value[0] => Mux2.IN17
value[0] => Mux3.IN17
value[0] => Equal0.IN3
value[0] => Equal2.IN2
value[1] => Mux0.IN16
value[1] => Mux1.IN16
value[1] => Mux2.IN16
value[1] => Mux3.IN16
value[1] => Equal0.IN1
value[1] => Equal2.IN1
value[2] => Mux0.IN15
value[2] => Mux1.IN15
value[2] => Mux2.IN15
value[2] => Mux3.IN15
value[2] => Equal0.IN0
value[2] => Equal2.IN0
value[3] => Mux0.IN14
value[3] => Mux1.IN14
value[3] => Mux2.IN14
value[3] => Mux3.IN14
value[3] => Equal0.IN2
value[3] => Equal2.IN3
led[0] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
led[1] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
led[2] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
led[3] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|key_debounce:inst_key_debounce_key0
clk => key_value~reg0.CLK
clk => flag~reg0.CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
clk => delay_cnt[17].CLK
clk => delay_cnt[18].CLK
clk => delay_cnt[19].CLK
clk => key_reg.CLK
rst_n => delay_cnt[0].ACLR
rst_n => delay_cnt[1].ACLR
rst_n => delay_cnt[2].ACLR
rst_n => delay_cnt[3].ACLR
rst_n => delay_cnt[4].ACLR
rst_n => delay_cnt[5].ACLR
rst_n => delay_cnt[6].ACLR
rst_n => delay_cnt[7].ACLR
rst_n => delay_cnt[8].ACLR
rst_n => delay_cnt[9].ACLR
rst_n => delay_cnt[10].ACLR
rst_n => delay_cnt[11].ACLR
rst_n => delay_cnt[12].ACLR
rst_n => delay_cnt[13].ACLR
rst_n => delay_cnt[14].ACLR
rst_n => delay_cnt[15].ACLR
rst_n => delay_cnt[16].ACLR
rst_n => delay_cnt[17].ACLR
rst_n => delay_cnt[18].ACLR
rst_n => delay_cnt[19].ACLR
rst_n => key_reg.PRESET
rst_n => key_value~reg0.PRESET
rst_n => flag~reg0.ACLR
key => always0.IN1
key => key_reg.DATAIN
key => key_value~reg0.DATAIN
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value <= key_value~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|key_debounce:inst_key_debounce_key1
clk => key_value~reg0.CLK
clk => flag~reg0.CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
clk => delay_cnt[17].CLK
clk => delay_cnt[18].CLK
clk => delay_cnt[19].CLK
clk => key_reg.CLK
rst_n => delay_cnt[0].ACLR
rst_n => delay_cnt[1].ACLR
rst_n => delay_cnt[2].ACLR
rst_n => delay_cnt[3].ACLR
rst_n => delay_cnt[4].ACLR
rst_n => delay_cnt[5].ACLR
rst_n => delay_cnt[6].ACLR
rst_n => delay_cnt[7].ACLR
rst_n => delay_cnt[8].ACLR
rst_n => delay_cnt[9].ACLR
rst_n => delay_cnt[10].ACLR
rst_n => delay_cnt[11].ACLR
rst_n => delay_cnt[12].ACLR
rst_n => delay_cnt[13].ACLR
rst_n => delay_cnt[14].ACLR
rst_n => delay_cnt[15].ACLR
rst_n => delay_cnt[16].ACLR
rst_n => delay_cnt[17].ACLR
rst_n => delay_cnt[18].ACLR
rst_n => delay_cnt[19].ACLR
rst_n => key_reg.PRESET
rst_n => key_value~reg0.PRESET
rst_n => flag~reg0.ACLR
key => always0.IN1
key => key_reg.DATAIN
key => key_value~reg0.DATAIN
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value <= key_value~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|key_debounce:inst_key_debounce_key2
clk => key_value~reg0.CLK
clk => flag~reg0.CLK
clk => delay_cnt[0].CLK
clk => delay_cnt[1].CLK
clk => delay_cnt[2].CLK
clk => delay_cnt[3].CLK
clk => delay_cnt[4].CLK
clk => delay_cnt[5].CLK
clk => delay_cnt[6].CLK
clk => delay_cnt[7].CLK
clk => delay_cnt[8].CLK
clk => delay_cnt[9].CLK
clk => delay_cnt[10].CLK
clk => delay_cnt[11].CLK
clk => delay_cnt[12].CLK
clk => delay_cnt[13].CLK
clk => delay_cnt[14].CLK
clk => delay_cnt[15].CLK
clk => delay_cnt[16].CLK
clk => delay_cnt[17].CLK
clk => delay_cnt[18].CLK
clk => delay_cnt[19].CLK
clk => key_reg.CLK
rst_n => delay_cnt[0].ACLR
rst_n => delay_cnt[1].ACLR
rst_n => delay_cnt[2].ACLR
rst_n => delay_cnt[3].ACLR
rst_n => delay_cnt[4].ACLR
rst_n => delay_cnt[5].ACLR
rst_n => delay_cnt[6].ACLR
rst_n => delay_cnt[7].ACLR
rst_n => delay_cnt[8].ACLR
rst_n => delay_cnt[9].ACLR
rst_n => delay_cnt[10].ACLR
rst_n => delay_cnt[11].ACLR
rst_n => delay_cnt[12].ACLR
rst_n => delay_cnt[13].ACLR
rst_n => delay_cnt[14].ACLR
rst_n => delay_cnt[15].ACLR
rst_n => delay_cnt[16].ACLR
rst_n => delay_cnt[17].ACLR
rst_n => delay_cnt[18].ACLR
rst_n => delay_cnt[19].ACLR
rst_n => key_reg.PRESET
rst_n => key_value~reg0.PRESET
rst_n => flag~reg0.ACLR
key => always0.IN1
key => key_reg.DATAIN
key => key_value~reg0.DATAIN
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
key_value <= key_value~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|beep_drive:inst_beep_drive
clk => flag_beep_time_out.CLK
clk => beep~reg0.CLK
clk => cnt_time[0].CLK
clk => cnt_time[1].CLK
clk => cnt_time[2].CLK
clk => cnt_time[3].CLK
clk => cnt_time[4].CLK
clk => cnt_time[5].CLK
clk => cnt_time[6].CLK
clk => cnt_time[7].CLK
clk => cnt_time[8].CLK
clk => cnt_time[9].CLK
clk => cnt_time[10].CLK
clk => cnt_time[11].CLK
clk => cnt_time[12].CLK
clk => cnt_time[13].CLK
clk => cnt_time[14].CLK
clk => cnt_time[15].CLK
clk => cnt_time[16].CLK
clk => cnt_time[17].CLK
clk => cnt_time[18].CLK
clk => cnt_time[19].CLK
clk => cnt_time[20].CLK
clk => cnt_time[21].CLK
clk => cnt_time[22].CLK
clk => cnt_time[23].CLK
clk => cnt_time_music[0].CLK
clk => cnt_time_music[1].CLK
clk => cnt_time_music[2].CLK
clk => cnt_time_music[3].CLK
clk => cnt_time_music[4].CLK
clk => cnt_time_music[5].CLK
clk => cnt_time_music[6].CLK
clk => cnt_time_music[7].CLK
clk => cnt_time_music[8].CLK
clk => cnt_time_music[9].CLK
clk => cnt_time_music[10].CLK
clk => cnt_time_music[11].CLK
clk => cnt_time_music[12].CLK
clk => cnt_time_music[13].CLK
clk => cnt_time_music[14].CLK
clk => cnt_time_music[15].CLK
clk => cnt_time_music[16].CLK
clk => cnt_time_music[17].CLK
clk => cnt_time_music[18].CLK
clk => cnt_time_music[19].CLK
clk => cnt_time_music[20].CLK
clk => cnt_time_music[21].CLK
clk => cnt_time_music[22].CLK
clk => cnt_time_music[23].CLK
clk => cnt_time_music[24].CLK
clk => cnt_time_music[25].CLK
clk => cnt_time_music[26].CLK
clk => cnt_time_music[27].CLK
rst_n => cnt_time_music[0].ACLR
rst_n => cnt_time_music[1].ACLR
rst_n => cnt_time_music[2].ACLR
rst_n => cnt_time_music[3].ACLR
rst_n => cnt_time_music[4].ACLR
rst_n => cnt_time_music[5].ACLR
rst_n => cnt_time_music[6].ACLR
rst_n => cnt_time_music[7].ACLR
rst_n => cnt_time_music[8].ACLR
rst_n => cnt_time_music[9].ACLR
rst_n => cnt_time_music[10].ACLR
rst_n => cnt_time_music[11].ACLR
rst_n => cnt_time_music[12].ACLR
rst_n => cnt_time_music[13].ACLR
rst_n => cnt_time_music[14].ACLR
rst_n => cnt_time_music[15].ACLR
rst_n => cnt_time_music[16].ACLR
rst_n => cnt_time_music[17].ACLR
rst_n => cnt_time_music[18].ACLR
rst_n => cnt_time_music[19].ACLR
rst_n => cnt_time_music[20].ACLR
rst_n => cnt_time_music[21].ACLR
rst_n => cnt_time_music[22].ACLR
rst_n => cnt_time_music[23].ACLR
rst_n => cnt_time_music[24].ACLR
rst_n => cnt_time_music[25].ACLR
rst_n => cnt_time_music[26].ACLR
rst_n => cnt_time_music[27].ACLR
rst_n => flag_beep_time_out.PRESET
rst_n => beep~reg0.PRESET
rst_n => cnt_time[0].ACLR
rst_n => cnt_time[1].ACLR
rst_n => cnt_time[2].ACLR
rst_n => cnt_time[3].ACLR
rst_n => cnt_time[4].ACLR
rst_n => cnt_time[5].ACLR
rst_n => cnt_time[6].ACLR
rst_n => cnt_time[7].ACLR
rst_n => cnt_time[8].ACLR
rst_n => cnt_time[9].ACLR
rst_n => cnt_time[10].ACLR
rst_n => cnt_time[11].ACLR
rst_n => cnt_time[12].ACLR
rst_n => cnt_time[13].ACLR
rst_n => cnt_time[14].ACLR
rst_n => cnt_time[15].ACLR
rst_n => cnt_time[16].ACLR
rst_n => cnt_time[17].ACLR
rst_n => cnt_time[18].ACLR
rst_n => cnt_time[19].ACLR
rst_n => cnt_time[20].ACLR
rst_n => cnt_time[21].ACLR
rst_n => cnt_time[22].ACLR
rst_n => cnt_time[23].ACLR
flag => always1.IN0
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => cnt_time_music.OUTPUTSELECT
flag_buying => always1.IN1
flag_hand => always1.IN1
status => always1.IN1
status => always1.IN1
beep <= beep~reg0.DB_MAX_OUTPUT_PORT_TYPE


|prj7620_beep_seg|freq_select:inst_freq_select
clk => status~reg0.CLK
clk => spec_flag[0]~reg0.CLK
clk => spec_flag[1]~reg0.CLK
clk => spec_flag[2]~reg0.CLK
clk => spec_data[0].CLK
clk => spec_data[1].CLK
clk => spec_data[2].CLK
clk => spec_data[3].CLK
clk => spec_data[4].CLK
clk => spec_data[5].CLK
clk => spec_data[6].CLK
clk => spec_data[7].CLK
clk => spec_data[8].CLK
clk => spec_data[9].CLK
clk => spec_data[10].CLK
clk => spec_data[11].CLK
clk => spec_data[12].CLK
clk => spec_data[13].CLK
clk => spec_data[14].CLK
clk => spec_data[15].CLK
clk => spec_data[16].CLK
clk => spec_data[17].CLK
clk => spec_data[18].CLK
clk => spec_data[19].CLK
clk => spec_cnt[0].CLK
clk => spec_cnt[1].CLK
clk => spec_cnt[2].CLK
clk => spec_cnt[3].CLK
clk => spec_cnt[4].CLK
clk => spec_cnt[5].CLK
clk => note_cnt[0].CLK
clk => note_cnt[1].CLK
clk => note_cnt[2].CLK
clk => note_cnt[3].CLK
clk => note_cnt[4].CLK
clk => note_cnt[5].CLK
clk => note_cnt[6].CLK
clk => note_cnt[7].CLK
clk => note_cnt[8].CLK
clk => note_cnt[9].CLK
clk => note_cnt[10].CLK
clk => note_cnt[11].CLK
clk => note_cnt[12].CLK
clk => note_cnt[13].CLK
clk => note_cnt[14].CLK
clk => note_cnt[15].CLK
clk => note_cnt[16].CLK
clk => note_cnt[17].CLK
clk => note_cnt[18].CLK
clk => note_cnt[19].CLK
clk => inte_cnt[0].CLK
clk => inte_cnt[1].CLK
clk => inte_cnt[2].CLK
clk => inte_cnt[3].CLK
clk => inte_cnt[4].CLK
clk => inte_cnt[5].CLK
clk => inte_cnt[6].CLK
clk => inte_cnt[7].CLK
clk => inte_cnt[8].CLK
clk => inte_cnt[9].CLK
clk => inte_cnt[10].CLK
clk => inte_cnt[11].CLK
clk => inte_cnt[12].CLK
clk => inte_cnt[13].CLK
clk => inte_cnt[14].CLK
clk => inte_cnt[15].CLK
clk => inte_cnt[16].CLK
clk => inte_cnt[17].CLK
clk => inte_cnt[18].CLK
clk => inte_cnt[19].CLK
clk => inte_cnt[20].CLK
clk => inte_cnt[21].CLK
clk => inte_cnt[22].CLK
clk => inte_cnt[23].CLK
clk => inte_cnt[24].CLK
clk => inte_cnt[25].CLK
rst_n => inte_cnt[0].ACLR
rst_n => inte_cnt[1].ACLR
rst_n => inte_cnt[2].ACLR
rst_n => inte_cnt[3].ACLR
rst_n => inte_cnt[4].ACLR
rst_n => inte_cnt[5].ACLR
rst_n => inte_cnt[6].ACLR
rst_n => inte_cnt[7].ACLR
rst_n => inte_cnt[8].ACLR
rst_n => inte_cnt[9].ACLR
rst_n => inte_cnt[10].ACLR
rst_n => inte_cnt[11].ACLR
rst_n => inte_cnt[12].ACLR
rst_n => inte_cnt[13].ACLR
rst_n => inte_cnt[14].ACLR
rst_n => inte_cnt[15].ACLR
rst_n => inte_cnt[16].ACLR
rst_n => inte_cnt[17].ACLR
rst_n => inte_cnt[18].ACLR
rst_n => inte_cnt[19].ACLR
rst_n => inte_cnt[20].ACLR
rst_n => inte_cnt[21].ACLR
rst_n => inte_cnt[22].ACLR
rst_n => inte_cnt[23].ACLR
rst_n => inte_cnt[24].ACLR
rst_n => inte_cnt[25].ACLR
rst_n => spec_flag[0]~reg0.ACLR
rst_n => spec_flag[1]~reg0.ACLR
rst_n => spec_flag[2]~reg0.ACLR
rst_n => status~reg0.ACLR
rst_n => note_cnt[0].ACLR
rst_n => note_cnt[1].ACLR
rst_n => note_cnt[2].ACLR
rst_n => note_cnt[3].ACLR
rst_n => note_cnt[4].ACLR
rst_n => note_cnt[5].ACLR
rst_n => note_cnt[6].ACLR
rst_n => note_cnt[7].ACLR
rst_n => note_cnt[8].ACLR
rst_n => note_cnt[9].ACLR
rst_n => note_cnt[10].ACLR
rst_n => note_cnt[11].ACLR
rst_n => note_cnt[12].ACLR
rst_n => note_cnt[13].ACLR
rst_n => note_cnt[14].ACLR
rst_n => note_cnt[15].ACLR
rst_n => note_cnt[16].ACLR
rst_n => note_cnt[17].ACLR
rst_n => note_cnt[18].ACLR
rst_n => note_cnt[19].ACLR
rst_n => spec_cnt[0].ACLR
rst_n => spec_cnt[1].ACLR
rst_n => spec_cnt[2].ACLR
rst_n => spec_cnt[3].ACLR
rst_n => spec_cnt[4].ACLR
rst_n => spec_cnt[5].ACLR
rst_n => spec_data[0].ACLR
rst_n => spec_data[1].ACLR
rst_n => spec_data[2].ACLR
rst_n => spec_data[3].ACLR
rst_n => spec_data[4].PRESET
rst_n => spec_data[5].PRESET
rst_n => spec_data[6].PRESET
rst_n => spec_data[7].ACLR
rst_n => spec_data[8].PRESET
rst_n => spec_data[9].ACLR
rst_n => spec_data[10].PRESET
rst_n => spec_data[11].ACLR
rst_n => spec_data[12].PRESET
rst_n => spec_data[13].PRESET
rst_n => spec_data[14].PRESET
rst_n => spec_data[15].ACLR
rst_n => spec_data[16].PRESET
rst_n => spec_data[17].ACLR
rst_n => spec_data[18].ACLR
rst_n => spec_data[19].ACLR
flag_buy => ~NO_FANOUT~
status <= status~reg0.DB_MAX_OUTPUT_PORT_TYPE
spec_flag[0] <= spec_flag[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
spec_flag[1] <= spec_flag[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
spec_flag[2] <= spec_flag[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


